{
  "keywords:existence": {
    "keywords": "A sequence of strings representing the keywords that are expected in the response."
  }
}
{
  "keywords:frequency": {
    "keyword": "A string representing a keyword that is expected in the response.",
    "frequency": "An integer specifying the number of times `keyword` is expected to appear in the response.",
    "relation": "A string in (`less than`, `at least`), defining the relational operator for comparison. Two relational comparisons are supported for now: if 'less than', the actual number of occurrences < frequency; if 'at least', the actual number of occurrences >= frequency."
  }
}
{
  "keywords:forbidden_words": {
    "forbidden_words": "A sequences of strings respresenting words that are not allowed in the response."
  }
}
{
  "keywords:letter_frequency": {
    "letter": "A string representing a letter that is expected in the response.",
    "let_frequency": "An integer specifying the number of times `keyword` is expected to appear in the response.",
    "let_relation": "A string in (`less than`, `at least`), defining the relational operator for comparison. Two relational comparisons are supported for now; if 'less than', the actual number of occurrences < frequency; if 'at least', the actual number of occurrences >= frequency."
  }
}
{
  "language:response_language": {
    "language": "A string representing the expected language of the response. The language has to comply to the 97 types defined in `langid.py` (https://pypi.org/project/langid/1.1.5/), which follows ISO 639-1 codes (https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes); for example, `en` for English, `zh` for Chinese, `fr` for French."
  }
}
{
  "length_constraints:number_sentences": {
    "num_sentences": "An integer specifying the number of sentences as a threshold.",
    "relation": "A string in (`less than`, `at least`), defining the relational operator for comparison. Two relational comparisons are supported for now: if 'less than', the actual number of sentences < the threshold; if 'at least', the actual number of sentences >= the threshold."
  }
}
{
  "length_constraints:number_paragraphs": {
    "num_paragraphs": "An integer specifying the number of paragraphs."
  }
}
{
  "length_constraints:number_words": {
    "num_words": "An integer specifying the number of words contained in the response.",
    "relation": "A string in (`less than`, `at least`), defining the relational operator for comparison. Two relational comparisons are supported for now: if 'less than', the actual number of words < num_words; if 'at least', the actual number of words >= num_words."
  }
}
{
  "length_constraints:nth_paragraph_first_word": {
    "num_paragraphs": "An integer indicating the number of paragraphs expected in the response. A paragraph is a subset of the string that is expected to be separated by '\\n\\n'.",
    "nth_paragraph": "An integer indicating the paragraph number that we look at. Note that n starts from 1.",
    "first_word": "A string that represent the first word of the bth paragraph."
  }
}
{
  "detectable_content:number_placeholders": {
    "num_placeholders": "An integer denoting the minimum number of placeholders required in the response."
  }
}
{
  "detectable_content:postscript": {
    "postscript_marker": "A string containing the keyword that marks the start of the postscript section."
  }
}
{
  "detectable_format:number_bullet_lists": {
    "num_bullets": "An integer specifying the exact number of bullet lists that is required to appear in the response."
  }
}
{
  "detectable_format:constrained_response": {}
}
{
  "detectable_format:number_highlighted_sections": {
    "num_highlights": "An integer specifying the minimum number of highlighted sections."
  }
}
{
  "detectable_format:multiple_sections": {
    "section_spliter": "A string represents the section spliter keyword that marks a new section, i.e., `Section` or `SECTION`.",
    "num_sections": "An integer specifying the number of sections."
  }
}
{
  "detectable_format:json_format": {}
}
{
  "detectable_format:title": {}
}
{
  "combination:two_responses": {}
}
{
  "combination:repeat_prompt": {
    "prompt_to_repeat": "The prompt that is meant to be repeated."
  }
}
{
  "startend:end_checker": {
    "end_phrase": "A string representing the phrase the response should end with."
  }
}
{
  "change_case:capital_word_frequency": {
    "capital_frequency": "An integer that represents the number of words that should be in all capital letters.",
    "capital_relation": "A string that is 'at least' or 'at most' that refers to the frequency."
  }
}
{
  "change_case:english_capital": {}
}
{
  "change_case:english_lowercase": {}
}
{
  "punctuation:no_comma": {}
}
{
  "startend:quotation": {}
}
